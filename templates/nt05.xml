<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>基本预处理</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_comment">// factorials, fact-inverses, unbounded</span>
<span class="sh_type">void</span> <span class="sh_function">init</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(*</span>fact <span class="sh_symbol">=</span> i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> N<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> fact<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>fact<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">*</span> i <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
	<span class="sh_symbol">--</span>i<span class="sh_symbol">,</span> finv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">PowerMod</span><span class="sh_symbol">(</span>fact<span class="sh_symbol">[</span>i<span class="sh_symbol">],</span> mod <span class="sh_symbol">-</span> <span class="sh_number">2</span><span class="sh_symbol">);</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(;</span> i<span class="sh_symbol">;</span> <span class="sh_symbol">--</span>i<span class="sh_symbol">)</span> finv<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>finv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> i <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// factorials, fact-inverses, bounded</span>
<span class="sh_type">void</span> <span class="sh_function">init</span><span class="sh_symbol">(</span><span class="sh_type">int</span> n<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(*</span>fact <span class="sh_symbol">=</span> i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> fact<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>fact<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">*</span> i <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
	finv<span class="sh_symbol">[</span>n<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">PowerMod</span><span class="sh_symbol">(</span>fact<span class="sh_symbol">[</span>n<span class="sh_symbol">],</span> mod <span class="sh_symbol">-</span> <span class="sh_number">2</span><span class="sh_symbol">);</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> n<span class="sh_symbol">;</span> i<span class="sh_symbol">;</span> <span class="sh_symbol">--</span>i<span class="sh_symbol">)</span> finv<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>finv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> i <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// inverses, factorials, fact-inverses, unbounded</span>
<span class="sh_type">void</span> <span class="sh_function">init</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>inv<span class="sh_symbol">[</span><span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> i <span class="sh_symbol">=</span> <span class="sh_number">2</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> N<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> inv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">ll</span><span class="sh_symbol">(</span>mod <span class="sh_symbol">-</span> mod <span class="sh_symbol">/</span> i<span class="sh_symbol">)</span> <span class="sh_symbol">*</span> inv<span class="sh_symbol">[</span>mod <span class="sh_symbol">%</span> i<span class="sh_symbol">]</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(*</span>finv <span class="sh_symbol">=</span> <span class="sh_symbol">*</span>fact <span class="sh_symbol">=</span> i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> N<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> fact<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>fact<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">*</span> i <span class="sh_symbol">%</span> mod<span class="sh_symbol">,</span> finv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>finv<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">*</span> inv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// inverses, factorials, fact-inverses, bounded</span>
<span class="sh_type">void</span> <span class="sh_function">init</span><span class="sh_symbol">(</span><span class="sh_type">int</span> n<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>inv<span class="sh_symbol">[</span><span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> i <span class="sh_symbol">=</span> <span class="sh_number">2</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> inv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">ll</span><span class="sh_symbol">(</span>mod <span class="sh_symbol">-</span> mod <span class="sh_symbol">/</span> i<span class="sh_symbol">)</span> <span class="sh_symbol">*</span> inv<span class="sh_symbol">[</span>mod <span class="sh_symbol">%</span> i<span class="sh_symbol">]</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(*</span>finv <span class="sh_symbol">=</span> <span class="sh_symbol">*</span>fact <span class="sh_symbol">=</span> i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> fact<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>fact<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">*</span> i <span class="sh_symbol">%</span> mod<span class="sh_symbol">,</span> finv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>finv<span class="sh_symbol">[</span>i <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">*</span> inv<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
