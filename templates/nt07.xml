<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>Miller-Rabin 素数测试</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_comment">// No pseudoprime below 2^64 to base 2, 3, 5, 7, 11, 13, 82, 373.</span>
<span class="sh_keyword">const</span> <span class="sh_type">int</span> test<span class="sh_symbol">[</span><span class="sh_number">8</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_cbracket">{</span><span class="sh_number">2</span><span class="sh_symbol">,</span> <span class="sh_number">3</span><span class="sh_symbol">,</span> <span class="sh_number">5</span><span class="sh_symbol">,</span> <span class="sh_number">7</span><span class="sh_symbol">,</span> <span class="sh_number">11</span><span class="sh_symbol">,</span> <span class="sh_number">13</span><span class="sh_symbol">,</span> <span class="sh_number">82</span><span class="sh_symbol">,</span> <span class="sh_number">373</span><span class="sh_cbracket">}</span><span class="sh_symbol">;</span>
<span class="sh_type">bool</span> <span class="sh_function">Miller_Rabin</span><span class="sh_symbol">(</span><span class="sh_usertype">ll</span><span class="sh_normal"> </span>n<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>n <span class="sh_symbol">&lt;</span> MAX<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_symbol">!</span>c<span class="sh_symbol">[</span>n<span class="sh_symbol">]</span> <span class="sh_symbol">&amp;&amp;</span> n <span class="sh_symbol">&gt;</span> <span class="sh_number">1</span><span class="sh_symbol">;</span>
	<span class="sh_type">int</span> c<span class="sh_symbol">,</span> i<span class="sh_symbol">,</span> j<span class="sh_symbol">;</span> <span class="sh_usertype">ll</span><span class="sh_normal"> </span>s <span class="sh_symbol">=</span> n <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> u<span class="sh_symbol">,</span> v<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>c <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> <span class="sh_symbol">!(</span>s <span class="sh_symbol">&amp;</span> <span class="sh_number">1</span><span class="sh_symbol">);</span> <span class="sh_symbol">++</span>c<span class="sh_symbol">,</span> s <span class="sh_symbol">&gt;&gt;=</span> <span class="sh_number">1</span><span class="sh_symbol">);</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> <span class="sh_number">8</span><span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(!(</span>n <span class="sh_symbol">%</span> test<span class="sh_symbol">[</span>i<span class="sh_symbol">]))</span> <span class="sh_keyword">return</span> <span class="sh_keyword">false</span><span class="sh_symbol">;</span>
		u <span class="sh_symbol">=</span> <span class="sh_function">PowerMod</span><span class="sh_symbol">(</span>test<span class="sh_symbol">[</span>i<span class="sh_symbol">],</span> s<span class="sh_symbol">,</span> n<span class="sh_symbol">);</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> c<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">,</span> u <span class="sh_symbol">=</span> v<span class="sh_symbol">)</span>
			<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>v <span class="sh_symbol">=</span> <span class="sh_function">MulMod</span><span class="sh_symbol">(</span>u<span class="sh_symbol">,</span> u<span class="sh_symbol">,</span> n<span class="sh_symbol">),</span> u <span class="sh_symbol">!=</span> <span class="sh_number">1</span> <span class="sh_symbol">&amp;&amp;</span> u <span class="sh_symbol">!=</span> n <span class="sh_symbol">-</span> <span class="sh_number">1</span> <span class="sh_symbol">&amp;&amp;</span> v <span class="sh_symbol">==</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_keyword">false</span><span class="sh_symbol">;</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>u <span class="sh_symbol">!=</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_keyword">false</span><span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
	<span class="sh_keyword">return</span> <span class="sh_keyword">true</span><span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
