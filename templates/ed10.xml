<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>Gauss 消元求行列式 (模意义)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_type">int</span> <span class="sh_function">gauss</span><span class="sh_symbol">(</span><span class="sh_type">int</span> n<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">,</span> j<span class="sh_symbol">,</span> k<span class="sh_symbol">,</span> det <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> <span class="sh_usertype">ll</span><span class="sh_normal"> </span>coe<span class="sh_symbol">;</span>
	<span class="sh_keyword">static</span> <span class="sh_type">int</span> <span class="sh_symbol">*</span>m<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> m<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> mat<span class="sh_symbol">[</span>i<span class="sh_symbol">];</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">=</span> i<span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> n <span class="sh_symbol">&amp;&amp;</span> <span class="sh_symbol">!</span>m<span class="sh_symbol">[</span>j<span class="sh_symbol">][</span>i<span class="sh_symbol">];</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">);</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">==</span> n<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">!=</span> j<span class="sh_symbol">)</span> det <span class="sh_symbol">=</span> mod <span class="sh_symbol">-</span> det<span class="sh_symbol">,</span> std<span class="sh_symbol">::</span><span class="sh_function">swap</span><span class="sh_symbol">(</span>m<span class="sh_symbol">[</span>i<span class="sh_symbol">],</span> m<span class="sh_symbol">[</span>j<span class="sh_symbol">]);</span>
		det <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ll<span class="sh_symbol">)</span>det <span class="sh_symbol">*</span> m<span class="sh_symbol">[</span>i<span class="sh_symbol">][</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
		coe <span class="sh_symbol">=</span> <span class="sh_function">PowerMod</span><span class="sh_symbol">(</span>m<span class="sh_symbol">[</span>i<span class="sh_symbol">][</span>i<span class="sh_symbol">],</span> mod <span class="sh_symbol">-</span> <span class="sh_number">2</span><span class="sh_symbol">);</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">)</span> m<span class="sh_symbol">[</span>i<span class="sh_symbol">][</span>j<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> m<span class="sh_symbol">[</span>i<span class="sh_symbol">][</span>j<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> coe <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>k <span class="sh_symbol">=</span> i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> k <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>k<span class="sh_symbol">)</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>coe <span class="sh_symbol">=</span> mod <span class="sh_symbol">-</span> m<span class="sh_symbol">[</span>k<span class="sh_symbol">][</span>i<span class="sh_symbol">],</span> j <span class="sh_symbol">=</span> i<span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">)</span> m<span class="sh_symbol">[</span>k<span class="sh_symbol">][</span>j<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>m<span class="sh_symbol">[</span>k<span class="sh_symbol">][</span>j<span class="sh_symbol">]</span> <span class="sh_symbol">+</span> coe <span class="sh_symbol">*</span> m<span class="sh_symbol">[</span>i<span class="sh_symbol">][</span>j<span class="sh_symbol">])</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
	<span class="sh_keyword">return</span> det<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
