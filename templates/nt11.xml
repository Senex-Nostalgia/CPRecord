<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>遍历 &#x230A;n / i&#x230B; 的所有可能值 (旧版整除分块)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_preproc">#define</span> <span class="sh_function">next</span><span class="sh_symbol">(</span>n<span class="sh_symbol">,</span> i<span class="sh_symbol">)</span> <span class="sh_symbol">(</span>n <span class="sh_symbol">/</span> <span class="sh_symbol">(</span>n <span class="sh_symbol">/</span> i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">))</span>
<span class="sh_keyword">for</span><span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> n<span class="sh_symbol">;</span> i <span class="sh_symbol">&gt;=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> j<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	j <span class="sh_symbol">=</span> <span class="sh_function">next</span><span class="sh_symbol">(</span>n<span class="sh_symbol">,</span> i<span class="sh_symbol">);</span>
	<span class="sh_comment">// do something</span>
<span class="sh_cbracket">}</span>

<span class="sh_preproc">#define</span> <span class="sh_function">_next</span><span class="sh_symbol">(</span>n<span class="sh_symbol">,</span> i<span class="sh_symbol">)</span> <span class="sh_symbol">(</span>n <span class="sh_symbol">/</span> <span class="sh_symbol">(</span>n <span class="sh_symbol">/</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)))</span>
<span class="sh_keyword">for</span><span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> j<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	j <span class="sh_symbol">=</span> <span class="sh_function">_next</span><span class="sh_symbol">(</span>n<span class="sh_symbol">,</span> i<span class="sh_symbol">);</span>
	<span class="sh_comment">// do something</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// 0 1 100 1 2 50 2 3 33 3 4 25 4 5 20 5 6 16 16 6 7 14 7 8 12 8 9 11 9 10 10 10 11 9 11 12 8 12 13 7 14 15 6 16 17 5 20 21 4 25 26 3 33 34 2 50 51 1 100 101 0 ?</span></code></pre>
</template>
