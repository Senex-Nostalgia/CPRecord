<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>树状数组 (不封装)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_preproc">#define</span> <span class="sh_function">lowbit</span><span class="sh_symbol">(</span>x<span class="sh_symbol">)</span> <span class="sh_symbol">(</span>x <span class="sh_symbol">&amp;</span> <span class="sh_symbol">-</span>x<span class="sh_symbol">)</span>

<span class="sh_type">int</span> <span class="sh_function">sum</span><span class="sh_symbol">(</span><span class="sh_type">int</span> h<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> s <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">while</span><span class="sh_symbol">(</span>h<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
		s <span class="sh_symbol">+=</span> a<span class="sh_symbol">[</span>h<span class="sh_symbol">];</span>
		h <span class="sh_symbol">-=</span> <span class="sh_function">lowbit</span><span class="sh_symbol">(</span>h<span class="sh_symbol">);</span>
	<span class="sh_cbracket">}</span>
	<span class="sh_keyword">return</span> s<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">int</span> <span class="sh_function">add</span><span class="sh_symbol">(</span><span class="sh_type">int</span> h<span class="sh_symbol">,</span> <span class="sh_type">int</span> v<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_keyword">while</span><span class="sh_symbol">(</span>h <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
		a<span class="sh_symbol">[</span>h<span class="sh_symbol">]</span> <span class="sh_symbol">+=</span> v<span class="sh_symbol">;</span>
		h <span class="sh_symbol">+=</span> <span class="sh_function">lowbit</span><span class="sh_symbol">(</span>h<span class="sh_symbol">);</span>
	<span class="sh_cbracket">}</span>
	<span class="sh_keyword">return</span> v<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
