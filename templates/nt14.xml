<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>大小步离散对数</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_type">int</span> <span class="sh_function">Boy_Step_Girl_Step</span><span class="sh_symbol">()</span><span class="sh_cbracket">{</span>
	mii <span class="sh_symbol">::</span> <span class="sh_usertype">iterator</span><span class="sh_normal"> </span>it<span class="sh_symbol">;</span>
	ll boy <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> girl <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> i<span class="sh_symbol">,</span> t<span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span><span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> B<span class="sh_symbol">;</span> i<span class="sh_symbol">++)</span><span class="sh_cbracket">{</span>
		m<span class="sh_symbol">.</span><span class="sh_function">insert</span><span class="sh_symbol">(</span><span class="sh_function">pr</span><span class="sh_symbol">((</span><span class="sh_type">int</span><span class="sh_symbol">)</span>boy<span class="sh_symbol">,</span> i<span class="sh_symbol">));</span> <span class="sh_comment">// if there exists in map, then ignore it</span>
		<span class="sh_symbol">(</span>boy <span class="sh_symbol">*=</span> a<span class="sh_symbol">)</span> <span class="sh_symbol">%=</span> p<span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
	<span class="sh_keyword">for</span><span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">*</span> B <span class="sh_symbol">&lt;</span> p<span class="sh_symbol">;</span> i<span class="sh_symbol">++)</span><span class="sh_cbracket">{</span>
		t <span class="sh_symbol">=</span> b <span class="sh_symbol">*</span> <span class="sh_function">inv</span><span class="sh_symbol">(</span>girl<span class="sh_symbol">)</span> <span class="sh_symbol">%</span> p<span class="sh_symbol">;</span>
		it <span class="sh_symbol">=</span> m<span class="sh_symbol">.</span><span class="sh_function">find</span><span class="sh_symbol">((</span><span class="sh_type">int</span><span class="sh_symbol">)</span>t<span class="sh_symbol">);</span>
		<span class="sh_keyword">if</span><span class="sh_symbol">(</span>it <span class="sh_symbol">!=</span> m<span class="sh_symbol">.</span><span class="sh_function">end</span><span class="sh_symbol">())</span>
			<span class="sh_keyword">return</span> i <span class="sh_symbol">*</span> B <span class="sh_symbol">+</span> it<span class="sh_symbol">-&gt;</span>second<span class="sh_symbol">;</span>
		<span class="sh_symbol">(</span>girl <span class="sh_symbol">*=</span> boy<span class="sh_symbol">)</span> <span class="sh_symbol">%=</span> p<span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
	<span class="sh_keyword">return</span> <span class="sh_symbol">-</span><span class="sh_number">1</span><span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// input p and then B = (int)sqrt(p - 1);</span>
<span class="sh_comment">// inv(x) is the multiplicative inverse of x in Z[p].</span>
<span class="sh_comment">// mii: map &lt;int, int&gt; and m is a variable of which.</span></code></pre>
</template>
