<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>可删除的堆</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_keyword">struct</span><span class="sh_normal"> </span><span class="sh_classname">heap</span> <span class="sh_cbracket">{</span>
	std<span class="sh_symbol">::</span>priority_queue <span class="sh_symbol">&lt;</span><span class="sh_type">int</span><span class="sh_symbol">,</span> std<span class="sh_symbol">::</span>vector <span class="sh_symbol">&lt;</span><span class="sh_type">int</span><span class="sh_symbol">&gt;,</span> std<span class="sh_symbol">::</span>greater <span class="sh_symbol">&lt;</span><span class="sh_type">int</span><span class="sh_symbol">&gt;&gt;</span> A<span class="sh_symbol">,</span> B<span class="sh_symbol">;</span>

	<span class="sh_keyword">inline</span> <span class="sh_type">void</span> <span class="sh_function">emplace</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>A<span class="sh_symbol">.</span><span class="sh_function">emplace</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">inline</span> <span class="sh_type">void</span> <span class="sh_function">erase</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>B<span class="sh_symbol">.</span><span class="sh_function">emplace</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">inline</span> <span class="sh_type">void</span> <span class="sh_function">normalize</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span><span class="sh_keyword">for</span> <span class="sh_symbol">(;</span> <span class="sh_symbol">!</span>B<span class="sh_symbol">.</span><span class="sh_function">empty</span><span class="sh_symbol">()</span> <span class="sh_symbol">&amp;&amp;</span> A<span class="sh_symbol">.</span><span class="sh_function">top</span><span class="sh_symbol">()</span> <span class="sh_symbol">==</span> B<span class="sh_symbol">.</span><span class="sh_function">top</span><span class="sh_symbol">();</span> A<span class="sh_symbol">.</span><span class="sh_function">pop</span><span class="sh_symbol">(),</span> B<span class="sh_symbol">.</span><span class="sh_function">pop</span><span class="sh_symbol">());</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">inline</span> <span class="sh_type">int</span> <span class="sh_function">top</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> <span class="sh_function">normalize</span><span class="sh_symbol">(),</span> A<span class="sh_symbol">.</span><span class="sh_function">empty</span><span class="sh_symbol">()</span> <span class="sh_symbol">?</span> INF <span class="sh_symbol">:</span> A<span class="sh_symbol">.</span><span class="sh_function">top</span><span class="sh_symbol">();</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">inline</span> <span class="sh_type">bool</span> <span class="sh_function">pop</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> <span class="sh_function">normalize</span><span class="sh_symbol">(),</span> <span class="sh_symbol">!</span>A<span class="sh_symbol">.</span><span class="sh_function">empty</span><span class="sh_symbol">()</span> <span class="sh_symbol">&amp;&amp;</span> <span class="sh_symbol">(</span>A<span class="sh_symbol">.</span><span class="sh_function">pop</span><span class="sh_symbol">(),</span> <span class="sh_keyword">true</span><span class="sh_symbol">);</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">inline</span> <span class="sh_type">void</span> <span class="sh_function">clear</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span><span class="sh_keyword">for</span> <span class="sh_symbol">(;</span> <span class="sh_symbol">!</span>A<span class="sh_symbol">.</span><span class="sh_function">empty</span><span class="sh_symbol">();</span> A<span class="sh_symbol">.</span><span class="sh_function">pop</span><span class="sh_symbol">());</span> <span class="sh_keyword">for</span> <span class="sh_symbol">(;</span> <span class="sh_symbol">!</span>B<span class="sh_symbol">.</span><span class="sh_function">empty</span><span class="sh_symbol">();</span> B<span class="sh_symbol">.</span><span class="sh_function">pop</span><span class="sh_symbol">());</span><span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span><span class="sh_symbol">;</span></code></pre>
</template>
