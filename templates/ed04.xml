<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>ST è¡¨</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_keyword">namespace</span> RMQ_simple <span class="sh_cbracket">{</span>
	<span class="sh_type">void</span> <span class="sh_function">build_sparse_table</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span>
		<span class="sh_type">int</span> <span class="sh_symbol">*</span>f<span class="sh_symbol">,</span> <span class="sh_symbol">*</span>g <span class="sh_symbol">=</span> <span class="sh_symbol">*</span>st<span class="sh_symbol">,</span> i<span class="sh_symbol">,</span> j<span class="sh_symbol">,</span> k <span class="sh_symbol">=</span> n<span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> <span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
			f <span class="sh_symbol">=</span> g<span class="sh_symbol">,</span> g <span class="sh_symbol">=</span> st<span class="sh_symbol">[</span>j <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">],</span> k <span class="sh_symbol">-=</span> <span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> j<span class="sh_symbol">;</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> k<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span>
				g<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">min</span><span class="sh_symbol">(</span>f<span class="sh_symbol">[</span>i<span class="sh_symbol">],</span> f<span class="sh_symbol">[</span>i <span class="sh_symbol">+</span> <span class="sh_symbol">(</span><span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> j<span class="sh_symbol">)]);</span>
		<span class="sh_cbracket">}</span>
	<span class="sh_cbracket">}</span>

	<span class="sh_keyword">inline</span> <span class="sh_type">int</span> <span class="sh_function">range</span><span class="sh_symbol">(</span><span class="sh_type">int</span> L<span class="sh_symbol">,</span> <span class="sh_type">int</span> R<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_type">int</span> c <span class="sh_symbol">=</span> <span class="sh_function">lg2</span><span class="sh_symbol">(</span>R <span class="sh_symbol">-</span> L<span class="sh_symbol">);</span>
		<span class="sh_keyword">return</span> <span class="sh_function">min</span><span class="sh_symbol">(</span>st<span class="sh_symbol">[</span>c<span class="sh_symbol">][</span>L<span class="sh_symbol">],</span> st<span class="sh_symbol">[</span>c<span class="sh_symbol">][</span>R <span class="sh_symbol">-</span> <span class="sh_symbol">(</span><span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> c<span class="sh_symbol">)]);</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span>

<span class="sh_keyword">namespace</span> RMQ_fake <span class="sh_cbracket">{</span>
	<span class="sh_keyword">const</span> <span class="sh_type">int</span> LN <span class="sh_symbol">=</span> <span class="sh_number">18</span><span class="sh_symbol">,</span> TH <span class="sh_symbol">=</span> <span class="sh_number">18</span><span class="sh_symbol">;</span>

	<span class="sh_type">int</span> n<span class="sh_symbol">,</span> <span class="sh_symbol">*</span>a<span class="sh_symbol">,</span> pre<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> suf<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> bel<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>
	<span class="sh_type">int</span> L<span class="sh_symbol">,</span> st<span class="sh_symbol">[</span>LN<span class="sh_symbol">][</span>N <span class="sh_symbol">/</span> TH<span class="sh_symbol">],</span> <span class="sh_symbol">*</span>lay <span class="sh_symbol">=</span> <span class="sh_symbol">*</span>st<span class="sh_symbol">;</span>

	<span class="sh_type">void</span> <span class="sh_function">build</span><span class="sh_symbol">(</span><span class="sh_type">int</span> n_<span class="sh_symbol">,</span> <span class="sh_type">int</span> <span class="sh_symbol">*</span>a_<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_type">int</span> i<span class="sh_symbol">,</span> j<span class="sh_symbol">,</span> k<span class="sh_symbol">,</span> I<span class="sh_symbol">,</span> <span class="sh_symbol">*</span>f<span class="sh_symbol">,</span> <span class="sh_symbol">*</span>g <span class="sh_symbol">=</span> lay<span class="sh_symbol">;</span> n <span class="sh_symbol">=</span> n_<span class="sh_symbol">,</span> a <span class="sh_symbol">=</span> a_<span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>I <span class="sh_symbol">=</span> i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> I <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">,</span> I <span class="sh_symbol">+=</span> TH<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
			pre<span class="sh_symbol">[</span>I<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> a<span class="sh_symbol">[</span>I<span class="sh_symbol">],</span> bel<span class="sh_symbol">[</span>I<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> i<span class="sh_symbol">;</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> TH <span class="sh_symbol">&amp;&amp;</span> I <span class="sh_symbol">+</span> j <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">)</span> pre<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">min</span><span class="sh_symbol">(</span>pre<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">],</span> a<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j<span class="sh_symbol">]),</span> bel<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> i<span class="sh_symbol">;</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(--</span>j<span class="sh_symbol">,</span> suf<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> a<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j<span class="sh_symbol">];</span> <span class="sh_symbol">--</span>j <span class="sh_symbol">&gt;=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> suf<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">min</span><span class="sh_symbol">(</span>suf<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">],</span> a<span class="sh_symbol">[</span>I <span class="sh_symbol">+</span> j<span class="sh_symbol">]));</span>
			lay<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> suf<span class="sh_symbol">[</span>I<span class="sh_symbol">];</span>
		<span class="sh_cbracket">}</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>k <span class="sh_symbol">=</span> L <span class="sh_symbol">=</span> i<span class="sh_symbol">,</span> j <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> <span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> <span class="sh_symbol">(</span>j <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">&lt;=</span> L<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>j<span class="sh_symbol">)</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>f <span class="sh_symbol">=</span> g<span class="sh_symbol">,</span> g <span class="sh_symbol">=</span> st<span class="sh_symbol">[</span>j <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">],</span> k <span class="sh_symbol">-=</span> <span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> j<span class="sh_symbol">,</span> i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> k<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span>
				g<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_function">min</span><span class="sh_symbol">(</span>f<span class="sh_symbol">[</span>i<span class="sh_symbol">],</span> f<span class="sh_symbol">[</span>i <span class="sh_symbol">+</span> <span class="sh_symbol">(</span><span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> j<span class="sh_symbol">)]);</span>
	<span class="sh_cbracket">}</span>

	<span class="sh_keyword">inline</span> <span class="sh_type">int</span> <span class="sh_function">range</span><span class="sh_symbol">(</span><span class="sh_type">int</span> L<span class="sh_symbol">,</span> <span class="sh_type">int</span> R<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>R <span class="sh_symbol">&lt;=</span> L <span class="sh_symbol">+</span> TH<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_symbol">*</span>std<span class="sh_symbol">::</span><span class="sh_function">min_element</span><span class="sh_symbol">(</span>a <span class="sh_symbol">+</span> L<span class="sh_symbol">,</span> a <span class="sh_symbol">+</span> R<span class="sh_symbol">);</span>
		<span class="sh_type">int</span> x <span class="sh_symbol">=</span> bel<span class="sh_symbol">[</span>L<span class="sh_symbol">]</span> <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">,</span> y <span class="sh_symbol">=</span> bel<span class="sh_symbol">[--</span>R<span class="sh_symbol">],</span> c <span class="sh_symbol">=</span> <span class="sh_function">lg2</span><span class="sh_symbol">(</span>y <span class="sh_symbol">-</span> x<span class="sh_symbol">);</span>
		<span class="sh_keyword">return</span> <span class="sh_function">min</span><span class="sh_symbol">(</span><span class="sh_function">min</span><span class="sh_symbol">(</span>suf<span class="sh_symbol">[</span>L<span class="sh_symbol">],</span> pre<span class="sh_symbol">[</span>R<span class="sh_symbol">]),</span> x <span class="sh_symbol">&lt;</span> y <span class="sh_symbol">?</span> <span class="sh_function">min</span><span class="sh_symbol">(</span>st<span class="sh_symbol">[</span>c<span class="sh_symbol">][</span>x<span class="sh_symbol">],</span> st<span class="sh_symbol">[</span>c<span class="sh_symbol">][</span>y <span class="sh_symbol">-</span> <span class="sh_symbol">(</span><span class="sh_number">1</span> <span class="sh_symbol">&lt;&lt;</span> c<span class="sh_symbol">)])</span> <span class="sh_symbol">:</span> INT_MAX<span class="sh_symbol">);</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
