<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>直线及其函数</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_keyword">struct</span><span class="sh_normal"> </span><span class="sh_classname">line</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">double</span> A<span class="sh_symbol">,</span> B<span class="sh_symbol">,</span> C<span class="sh_symbol">;</span> <span class="sh_comment">// Ax + By + C = 0, &gt; 0 if it represents halfplane.</span>
	<span class="sh_function">line</span> <span class="sh_symbol">(</span><span class="sh_type">double</span> A0 <span class="sh_symbol">=</span> <span class="sh_number">0.0</span><span class="sh_symbol">,</span> <span class="sh_type">double</span> B0 <span class="sh_symbol">=</span> <span class="sh_number">0.0</span><span class="sh_symbol">,</span> <span class="sh_type">double</span> C0 <span class="sh_symbol">=</span> <span class="sh_number">0.0</span><span class="sh_symbol">)</span> <span class="sh_symbol">:</span> <span class="sh_function">A</span><span class="sh_symbol">(</span>A0<span class="sh_symbol">),</span> <span class="sh_function">B</span><span class="sh_symbol">(</span>B0<span class="sh_symbol">),</span> <span class="sh_function">C</span><span class="sh_symbol">(</span>C0<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span>
	<span class="sh_function">line</span> <span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_symbol">&amp;</span>u<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_symbol">&amp;</span>v<span class="sh_symbol">)</span> <span class="sh_symbol">:</span> <span class="sh_function">A</span><span class="sh_symbol">(</span>u<span class="sh_symbol">.</span>y <span class="sh_symbol">-</span> v<span class="sh_symbol">.</span>y<span class="sh_symbol">),</span> <span class="sh_function">B</span><span class="sh_symbol">(</span>v<span class="sh_symbol">.</span>x <span class="sh_symbol">-</span> u<span class="sh_symbol">.</span>x<span class="sh_symbol">),</span> <span class="sh_function">C</span><span class="sh_symbol">(</span>u <span class="sh_symbol">^</span> v<span class="sh_symbol">)</span> <span class="sh_cbracket">{}</span> <span class="sh_comment">// left &gt; 0</span>
	<span class="sh_keyword">inline</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_function">normVec</span><span class="sh_symbol">()</span> <span class="sh_keyword">const</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> <span class="sh_function">vec2</span><span class="sh_symbol">(</span>A<span class="sh_symbol">,</span> B<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">inline</span> <span class="sh_type">double</span><span class="sh_normal"> </span><span class="sh_function">norm2</span><span class="sh_symbol">()</span> <span class="sh_keyword">const</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> A <span class="sh_symbol">*</span> A <span class="sh_symbol">+</span> B <span class="sh_symbol">*</span> B<span class="sh_symbol">;</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">inline</span> <span class="sh_type">double</span> <span class="sh_keyword">operator</span> <span class="sh_symbol">()</span> <span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_symbol">&amp;</span>P<span class="sh_symbol">)</span> <span class="sh_keyword">const</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> A <span class="sh_symbol">*</span> P<span class="sh_symbol">.</span>x <span class="sh_symbol">+</span> B <span class="sh_symbol">*</span> P<span class="sh_symbol">.</span>y <span class="sh_symbol">+</span> C<span class="sh_symbol">;</span><span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span><span class="sh_symbol">;</span>

<span class="sh_keyword">inline</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_function">intersection</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>u<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>v<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> <span class="sh_function">vec2</span><span class="sh_symbol">(</span>u<span class="sh_symbol">.</span>B <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span>C <span class="sh_symbol">-</span> u<span class="sh_symbol">.</span>C <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span>B<span class="sh_symbol">,</span> u<span class="sh_symbol">.</span>C <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span>A <span class="sh_symbol">-</span> u<span class="sh_symbol">.</span>A <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span>C<span class="sh_symbol">)</span> <span class="sh_symbol">/</span> <span class="sh_symbol">(</span>u<span class="sh_symbol">.</span>A <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span>B <span class="sh_symbol">-</span> u<span class="sh_symbol">.</span>B <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span>A<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_type">bool</span> <span class="sh_function">parallel</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>u<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>v<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_type">double</span> p <span class="sh_symbol">=</span> u<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">()</span> <span class="sh_symbol">^</span> v<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">();</span> <span class="sh_keyword">return</span> <span class="sh_function">eq</span><span class="sh_symbol">(</span>p<span class="sh_symbol">,</span> <span class="sh_number">0</span><span class="sh_symbol">);</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_type">bool</span> <span class="sh_function">perpendicular</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>u<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>v<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_type">double</span> p <span class="sh_symbol">=</span> u<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">()</span> <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">();</span> <span class="sh_keyword">return</span> <span class="sh_function">eq</span><span class="sh_symbol">(</span>p<span class="sh_symbol">,</span> <span class="sh_number">0</span><span class="sh_symbol">);</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_type">bool</span> <span class="sh_function">sameDir</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>u<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>v<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> <span class="sh_function">parallel</span><span class="sh_symbol">(</span>u<span class="sh_symbol">,</span> v<span class="sh_symbol">)</span> <span class="sh_symbol">&amp;&amp;</span> <span class="sh_function">gt</span><span class="sh_symbol">(</span>u<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">()</span> <span class="sh_symbol">*</span> v<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">(),</span> <span class="sh_number">0</span><span class="sh_symbol">);</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span><span class="sh_function">bisector</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span>u<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span>v<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> <span class="sh_function">line</span><span class="sh_symbol">(</span>v<span class="sh_symbol">.</span>x <span class="sh_symbol">-</span> u<span class="sh_symbol">.</span>x<span class="sh_symbol">,</span> v<span class="sh_symbol">.</span>y <span class="sh_symbol">-</span> u<span class="sh_symbol">.</span>y<span class="sh_symbol">,</span> <span class="sh_number">0.5</span> <span class="sh_symbol">*</span> <span class="sh_symbol">(</span>u<span class="sh_symbol">.</span><span class="sh_function">norm2</span><span class="sh_symbol">()</span> <span class="sh_symbol">-</span> v<span class="sh_symbol">.</span><span class="sh_function">norm2</span><span class="sh_symbol">()));</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_type">double</span> <span class="sh_function">dis2</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span>P<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>l<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> <span class="sh_function">l</span><span class="sh_symbol">(</span>P<span class="sh_symbol">)</span> <span class="sh_symbol">*</span> <span class="sh_function">l</span><span class="sh_symbol">(</span>P<span class="sh_symbol">)</span> <span class="sh_symbol">/</span> l<span class="sh_symbol">.</span><span class="sh_function">norm2</span><span class="sh_symbol">();</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_function">projection</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span>P<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>l<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> P <span class="sh_symbol">-</span> l<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">()</span> <span class="sh_symbol">*</span> <span class="sh_symbol">(</span><span class="sh_function">l</span><span class="sh_symbol">(</span>P<span class="sh_symbol">)</span> <span class="sh_symbol">/</span> l<span class="sh_symbol">.</span><span class="sh_function">norm2</span><span class="sh_symbol">());</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_function">symmetry</span><span class="sh_symbol">(</span><span class="sh_keyword">const</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span>P<span class="sh_symbol">,</span> <span class="sh_keyword">const</span> <span class="sh_usertype">line</span><span class="sh_normal"> </span>l<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> P <span class="sh_symbol">-</span> l<span class="sh_symbol">.</span><span class="sh_function">normVec</span><span class="sh_symbol">()</span> <span class="sh_symbol">*</span> <span class="sh_symbol">(</span><span class="sh_number">2</span> <span class="sh_symbol">*</span> <span class="sh_function">l</span><span class="sh_symbol">(</span>P<span class="sh_symbol">)</span> <span class="sh_symbol">/</span> l<span class="sh_symbol">.</span><span class="sh_function">norm2</span><span class="sh_symbol">());</span><span class="sh_cbracket">}</span></code></pre>
</template>
