<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>字符串 Hash</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_keyword">const</span> <span class="sh_usertype">ll</span><span class="sh_normal"> </span>mod<span class="sh_symbol">[</span><span class="sh_number">3</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_cbracket">{</span><span class="sh_number">900000011</span><span class="sh_symbol">,</span> <span class="sh_number">998244353</span><span class="sh_symbol">,</span> <span class="sh_number">1000000007</span><span class="sh_cbracket">}</span><span class="sh_symbol">;</span>
<span class="sh_keyword">const</span> <span class="sh_usertype">ll</span><span class="sh_normal"> </span>bas<span class="sh_symbol">[</span><span class="sh_number">3</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_cbracket">{</span><span class="sh_number">4493</span><span class="sh_symbol">,</span> <span class="sh_number">8111</span><span class="sh_symbol">,</span> <span class="sh_number">8527</span><span class="sh_cbracket">}</span><span class="sh_symbol">;</span>
<span class="sh_comment">// you can choose your bases and modulos</span>

<span class="sh_type">char</span> s<span class="sh_symbol">[</span>S<span class="sh_symbol">];</span>
<span class="sh_usertype">ll</span><span class="sh_normal"> </span>pw<span class="sh_symbol">[</span><span class="sh_number">3</span><span class="sh_symbol">][</span>S<span class="sh_symbol">],</span> Hash<span class="sh_symbol">[</span><span class="sh_number">3</span><span class="sh_symbol">][</span>S<span class="sh_symbol">];</span>

<span class="sh_keyword">inline</span> <span class="sh_usertype">ll</span><span class="sh_normal"> </span><span class="sh_function">getHash</span><span class="sh_symbol">(</span><span class="sh_type">int</span> id<span class="sh_symbol">,</span> <span class="sh_type">int</span> L<span class="sh_symbol">,</span> <span class="sh_type">int</span> R<span class="sh_symbol">)</span><span class="sh_cbracket">{</span> <span class="sh_comment">// str[L..R-1]</span>
	<span class="sh_usertype">ll</span><span class="sh_normal"> </span>J <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>Hash<span class="sh_symbol">[</span>id<span class="sh_symbol">][</span>R<span class="sh_symbol">]</span> <span class="sh_symbol">-</span> Hash<span class="sh_symbol">[</span>id<span class="sh_symbol">][</span>L<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> pw<span class="sh_symbol">[</span>id<span class="sh_symbol">][</span>R <span class="sh_symbol">-</span> L<span class="sh_symbol">])</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">[</span>id<span class="sh_symbol">];</span>
	<span class="sh_keyword">return</span> J <span class="sh_symbol">&lt;</span> <span class="sh_number">0</span> <span class="sh_symbol">?</span> J <span class="sh_symbol">+</span> mod<span class="sh_symbol">[</span>id<span class="sh_symbol">]</span> <span class="sh_symbol">:</span> J<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// following is the pretreatment</span>
<span class="sh_usertype">ll</span><span class="sh_normal"> </span><span class="sh_symbol">*</span>f<span class="sh_symbol">,</span> <span class="sh_symbol">*</span>g<span class="sh_symbol">;</span>
<span class="sh_keyword">for</span><span class="sh_symbol">(</span>j <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> j <span class="sh_symbol">&lt;</span> <span class="sh_number">3</span><span class="sh_symbol">;</span> j<span class="sh_symbol">++)</span><span class="sh_cbracket">{</span>
	f <span class="sh_symbol">=</span> Hash<span class="sh_symbol">[</span>j<span class="sh_symbol">];</span> f<span class="sh_symbol">[</span><span class="sh_number">0</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	g <span class="sh_symbol">=</span> pw<span class="sh_symbol">[</span>j<span class="sh_symbol">];</span> g<span class="sh_symbol">[</span><span class="sh_number">0</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span><span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> n<span class="sh_symbol">;</span> i<span class="sh_symbol">++)</span><span class="sh_cbracket">{</span>
		f<span class="sh_symbol">[</span>i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>f<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> bas<span class="sh_symbol">[</span>j<span class="sh_symbol">]</span> <span class="sh_symbol">+</span> <span class="sh_symbol">(</span>s<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">-</span> <span class="sh_string">'a'</span><span class="sh_symbol">))</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">[</span>j<span class="sh_symbol">];</span>
		g<span class="sh_symbol">[</span>i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> g<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">*</span> bas<span class="sh_symbol">[</span>j<span class="sh_symbol">]</span> <span class="sh_symbol">%</span> mod<span class="sh_symbol">[</span>j<span class="sh_symbol">];</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
