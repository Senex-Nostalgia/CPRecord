<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>轻重链剖分 (Heavy-Light Decomposition)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_type">int</span> p<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> dep<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> size<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>
<span class="sh_type">int</span> cnt <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> id<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> prf<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> top<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>

<span class="sh_type">void</span> <span class="sh_function">dfs_wt</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">,</span> y<span class="sh_symbol">,</span> <span class="sh_symbol">&amp;</span>z <span class="sh_symbol">=</span> prf<span class="sh_symbol">[</span>x<span class="sh_symbol">];</span> size<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">!</span>next<span class="sh_symbol">[</span>first<span class="sh_symbol">[</span>x<span class="sh_symbol">]];</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> first<span class="sh_symbol">[</span>x<span class="sh_symbol">];</span> i<span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> next<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">((</span>y <span class="sh_symbol">=</span> to<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span> <span class="sh_symbol">!=</span> p<span class="sh_symbol">[</span>x<span class="sh_symbol">])</span> <span class="sh_cbracket">{</span>
			p<span class="sh_symbol">[</span>y<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> x<span class="sh_symbol">,</span> dep<span class="sh_symbol">[</span>y<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> dep<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">;</span>
			<span class="sh_function">dfs_wt</span><span class="sh_symbol">(</span>y<span class="sh_symbol">),</span> size<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">+=</span> size<span class="sh_symbol">[</span>y<span class="sh_symbol">];</span>
			size<span class="sh_symbol">[</span>y<span class="sh_symbol">]</span> <span class="sh_symbol">&gt;</span> size<span class="sh_symbol">[</span>z<span class="sh_symbol">]</span> <span class="sh_symbol">?</span> z <span class="sh_symbol">=</span> y <span class="sh_symbol">:</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
		<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">void</span> <span class="sh_function">dfs_hld</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">,</span> <span class="sh_type">int</span> r<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">,</span> y<span class="sh_symbol">;</span> id<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">++</span>cnt<span class="sh_symbol">,</span> top<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> r<span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span> <span class="sh_symbol">(!</span>prf<span class="sh_symbol">[</span>x<span class="sh_symbol">])</span> <span class="sh_keyword">return</span><span class="sh_symbol">;</span>
	<span class="sh_function">dfs_hld</span><span class="sh_symbol">(</span>prf<span class="sh_symbol">[</span>x<span class="sh_symbol">],</span> r<span class="sh_symbol">);</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> first<span class="sh_symbol">[</span>x<span class="sh_symbol">];</span> i<span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> next<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(!</span>top<span class="sh_symbol">[</span>y <span class="sh_symbol">=</span> to<span class="sh_symbol">[</span>i<span class="sh_symbol">]])</span> <span class="sh_function">dfs_hld</span><span class="sh_symbol">(</span>y<span class="sh_symbol">,</span> y<span class="sh_symbol">);</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">int</span> <span class="sh_function">solve</span><span class="sh_symbol">(</span><span class="sh_type">int</span> u<span class="sh_symbol">,</span> <span class="sh_type">int</span> v<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> x <span class="sh_symbol">=</span> top<span class="sh_symbol">[</span>u<span class="sh_symbol">],</span> y <span class="sh_symbol">=</span> top<span class="sh_symbol">[</span>v<span class="sh_symbol">];</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(;</span> x <span class="sh_symbol">!=</span> y<span class="sh_symbol">;</span> u <span class="sh_symbol">=</span> p<span class="sh_symbol">[</span>x<span class="sh_symbol">],</span> x <span class="sh_symbol">=</span> top<span class="sh_symbol">[</span>u<span class="sh_symbol">])</span> <span class="sh_cbracket">{</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>dep<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">&lt;</span> dep<span class="sh_symbol">[</span>y<span class="sh_symbol">])</span> <span class="sh_cbracket">{</span><span class="sh_function">swap</span><span class="sh_symbol">(</span>u<span class="sh_symbol">,</span> v<span class="sh_symbol">);</span> <span class="sh_function">swap</span><span class="sh_symbol">(</span>x<span class="sh_symbol">,</span> y<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>
		<span class="sh_comment">// do something on [x, u]</span>
	<span class="sh_cbracket">}</span>
	<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>dep<span class="sh_symbol">[</span>u<span class="sh_symbol">]</span> <span class="sh_symbol">&gt;</span> dep<span class="sh_symbol">[</span>v<span class="sh_symbol">])</span> <span class="sh_cbracket">{</span><span class="sh_function">swap</span><span class="sh_symbol">(</span>u<span class="sh_symbol">,</span> v<span class="sh_symbol">);</span> <span class="sh_function">swap</span><span class="sh_symbol">(</span>lx<span class="sh_symbol">,</span> ly<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>
	<span class="sh_comment">// do something on [u, v]</span>
	<span class="sh_comment">// return something</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
