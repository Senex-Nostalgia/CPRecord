<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>最小树形图 (朱-刘-Edmonds)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_keyword">namespace</span> DMST <span class="sh_cbracket">{</span>
	<span class="sh_keyword">const</span> <span class="sh_type">int</span> N <span class="sh_symbol">=</span> <span class="sh_number">108</span><span class="sh_symbol">,</span> M <span class="sh_symbol">=</span> <span class="sh_number">10054</span><span class="sh_symbol">,</span> INF <span class="sh_symbol">=</span> <span class="sh_number">0x3f3f3f3f</span><span class="sh_symbol">;</span>

	<span class="sh_type">int</span> V<span class="sh_symbol">,</span> E<span class="sh_symbol">,</span> r<span class="sh_symbol">;</span>
	<span class="sh_type">int</span> p<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> best<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>
	<span class="sh_type">int</span> bel<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> used<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> cyc<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>
	<span class="sh_type">int</span> min<span class="sh_symbol">[</span>N<span class="sh_symbol">],</span> delta<span class="sh_symbol">[</span>M<span class="sh_symbol">];</span>
	<span class="sh_type">bool</span> ans<span class="sh_symbol">[</span>M<span class="sh_symbol">];</span>
	<span class="sh_usertype">edge</span><span class="sh_normal"> </span>e<span class="sh_symbol">[</span>M<span class="sh_symbol">];</span>
	<span class="sh_usertype">pr</span><span class="sh_normal"> </span>elim<span class="sh_symbol">[</span>N <span class="sh_symbol">*</span> M<span class="sh_symbol">];</span>

	<span class="sh_keyword">inline</span> <span class="sh_type">void</span> <span class="sh_function">reset</span><span class="sh_symbol">(</span><span class="sh_type">int</span> n<span class="sh_symbol">,</span> <span class="sh_type">int</span> root<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>V <span class="sh_symbol">=</span> n<span class="sh_symbol">,</span> E <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> r <span class="sh_symbol">=</span> root<span class="sh_symbol">;</span><span class="sh_cbracket">}</span>

	<span class="sh_keyword">inline</span> <span class="sh_type">void</span> <span class="sh_function">link</span><span class="sh_symbol">(</span><span class="sh_type">int</span> u<span class="sh_symbol">,</span> <span class="sh_type">int</span> v<span class="sh_symbol">,</span> <span class="sh_type">int</span> w<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>e<span class="sh_symbol">[</span>E<span class="sh_symbol">++]</span> <span class="sh_symbol">=</span> <span class="sh_function">edge</span><span class="sh_symbol">(</span>u<span class="sh_symbol">,</span> v<span class="sh_symbol">,</span> w<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>

	<span class="sh_type">int</span> <span class="sh_function">CLE</span><span class="sh_symbol">()</span> <span class="sh_cbracket">{</span>
		<span class="sh_type">int</span> i<span class="sh_symbol">,</span> u<span class="sh_symbol">,</span> v<span class="sh_symbol">,</span> w<span class="sh_symbol">,</span> n<span class="sh_symbol">,</span> r<span class="sh_symbol">,</span> cnt<span class="sh_symbol">,</span> tot <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> w0 <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> w1 <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
		n <span class="sh_symbol">=</span> V<span class="sh_symbol">,</span> r <span class="sh_symbol">=</span> DMST<span class="sh_symbol">::</span>r<span class="sh_symbol">,</span> std<span class="sh_symbol">::</span><span class="sh_function">iota</span><span class="sh_symbol">(</span>bel<span class="sh_symbol">,</span> bel <span class="sh_symbol">+</span> <span class="sh_symbol">(</span>V <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">),</span> <span class="sh_number">0</span><span class="sh_symbol">);</span>
		<span class="sh_function">memset</span><span class="sh_symbol">(</span>ans<span class="sh_symbol">,</span> <span class="sh_keyword">false</span><span class="sh_symbol">,</span> E<span class="sh_symbol">),</span> <span class="sh_function">memset</span><span class="sh_symbol">(</span>delta<span class="sh_symbol">,</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> E <span class="sh_symbol">&lt;&lt;</span> <span class="sh_number">2</span><span class="sh_symbol">);</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(;</span> <span class="sh_symbol">;</span> n <span class="sh_symbol">=</span> cnt<span class="sh_symbol">,</span> r <span class="sh_symbol">=</span> cyc<span class="sh_symbol">[</span>r<span class="sh_symbol">])</span> <span class="sh_cbracket">{</span>
			<span class="sh_function">memset</span><span class="sh_symbol">(</span>min<span class="sh_symbol">,</span> <span class="sh_number">63</span><span class="sh_symbol">,</span> <span class="sh_symbol">(</span>V <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">&lt;&lt;</span> <span class="sh_number">2</span><span class="sh_symbol">),</span>
			<span class="sh_function">memset</span><span class="sh_symbol">(</span>used<span class="sh_symbol">,</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> <span class="sh_symbol">(</span>V <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">&lt;&lt;</span> <span class="sh_number">2</span><span class="sh_symbol">),</span> used<span class="sh_symbol">[</span>r<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">-</span><span class="sh_number">1</span><span class="sh_symbol">;</span>
			<span class="sh_function">memset</span><span class="sh_symbol">(</span>cyc<span class="sh_symbol">,</span> cnt <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> <span class="sh_symbol">(</span>V <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">&lt;&lt;</span> <span class="sh_number">2</span><span class="sh_symbol">);</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> E<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
				u <span class="sh_symbol">=</span> bel<span class="sh_symbol">[</span> e<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>u <span class="sh_symbol">],</span> v <span class="sh_symbol">=</span> bel<span class="sh_symbol">[</span> e<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>v <span class="sh_symbol">],</span> w <span class="sh_symbol">=</span> e<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>w <span class="sh_symbol">-</span> delta<span class="sh_symbol">[</span>i<span class="sh_symbol">];</span>
				<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>u <span class="sh_symbol">!=</span> v <span class="sh_symbol">&amp;&amp;</span> w <span class="sh_symbol">&lt;</span> min<span class="sh_symbol">[</span>v<span class="sh_symbol">])</span> p<span class="sh_symbol">[</span>v<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> u<span class="sh_symbol">,</span> min<span class="sh_symbol">[</span>v<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> w<span class="sh_symbol">,</span> best<span class="sh_symbol">[</span>v<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> i<span class="sh_symbol">;</span>
			<span class="sh_cbracket">}</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_keyword">if</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">!=</span> r<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
				<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>min<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">&gt;=</span> INF<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_symbol">-</span><span class="sh_number">1</span><span class="sh_symbol">;</span>
				<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>u <span class="sh_symbol">=</span> i<span class="sh_symbol">;</span> <span class="sh_symbol">!(</span>u <span class="sh_symbol">==</span> r <span class="sh_symbol">||</span> used<span class="sh_symbol">[</span>u<span class="sh_symbol">]);</span> u <span class="sh_symbol">=</span> p<span class="sh_symbol">[</span>u<span class="sh_symbol">])</span> used<span class="sh_symbol">[</span>u<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> i<span class="sh_symbol">;</span>
				<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>used<span class="sh_symbol">[</span>u<span class="sh_symbol">]</span> <span class="sh_symbol">==</span> i<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
					<span class="sh_symbol">++</span>cnt<span class="sh_symbol">,</span> v <span class="sh_symbol">=</span> u<span class="sh_symbol">;</span>
					<span class="sh_keyword">do</span> cyc<span class="sh_symbol">[</span>v<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> cnt<span class="sh_symbol">,</span> v <span class="sh_symbol">=</span> p<span class="sh_symbol">[</span>v<span class="sh_symbol">];</span> <span class="sh_keyword">while</span> <span class="sh_symbol">(</span>v <span class="sh_symbol">!=</span> u<span class="sh_symbol">);</span>
				<span class="sh_cbracket">}</span>
			<span class="sh_cbracket">}</span>
			<span class="sh_keyword">if</span> <span class="sh_symbol">(!(</span>w <span class="sh_symbol">=</span> cnt<span class="sh_symbol">))</span> <span class="sh_keyword">break</span><span class="sh_symbol">;</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span>
				<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>cyc<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span> ans<span class="sh_symbol">[</span> best<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_keyword">true</span><span class="sh_symbol">;</span>
				<span class="sh_keyword">else</span> cyc<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_symbol">++</span>cnt<span class="sh_symbol">;</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> E<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
				u <span class="sh_symbol">=</span> bel<span class="sh_symbol">[</span> e<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>u <span class="sh_symbol">],</span> v <span class="sh_symbol">=</span> bel<span class="sh_symbol">[</span> e<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>v <span class="sh_symbol">];</span>
				<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>cyc<span class="sh_symbol">[</span>u<span class="sh_symbol">]</span> <span class="sh_symbol">!=</span> cyc<span class="sh_symbol">[</span>v<span class="sh_symbol">])</span>
					<span class="sh_keyword">if</span> <span class="sh_symbol">(</span>delta<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">+=</span> min<span class="sh_symbol">[</span>v<span class="sh_symbol">],</span> cyc<span class="sh_symbol">[</span>v<span class="sh_symbol">]</span> <span class="sh_symbol">&lt;=</span> w<span class="sh_symbol">)</span>
						elim<span class="sh_symbol">[</span>tot<span class="sh_symbol">++]</span> <span class="sh_symbol">=</span> <span class="sh_function">pr</span><span class="sh_symbol">(</span>best<span class="sh_symbol">[</span>v<span class="sh_symbol">],</span> i<span class="sh_symbol">);</span>
			<span class="sh_cbracket">}</span>
			<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> V<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> bel<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> cyc<span class="sh_symbol">[</span>bel<span class="sh_symbol">[</span>i<span class="sh_symbol">]];</span>
		<span class="sh_cbracket">}</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> n<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_keyword">if</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">!=</span> r<span class="sh_symbol">)</span> ans<span class="sh_symbol">[</span> best<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_keyword">true</span><span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> tot <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&gt;=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> <span class="sh_symbol">--</span>i<span class="sh_symbol">)</span> <span class="sh_keyword">if</span> <span class="sh_symbol">(</span>ans<span class="sh_symbol">[</span>elim<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>second<span class="sh_symbol">])</span> ans<span class="sh_symbol">[</span>elim<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>first<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_keyword">false</span><span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;</span> E<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_keyword">if</span> <span class="sh_symbol">(</span>ans<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span> <span class="sh_symbol">++</span>w0<span class="sh_symbol">,</span> w1 <span class="sh_symbol">+=</span> e<span class="sh_symbol">[</span>i<span class="sh_symbol">].</span>w<span class="sh_symbol">;</span>
		<span class="sh_keyword">return</span> <span class="sh_function">assert</span><span class="sh_symbol">(</span>w0 <span class="sh_symbol">==</span> V <span class="sh_symbol">-</span> <span class="sh_number">1</span><span class="sh_symbol">),</span> w1<span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
