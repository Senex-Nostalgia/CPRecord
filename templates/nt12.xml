<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>新版整除分块</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_comment">// int32 ver.</span>
<span class="sh_type">int</span> n<span class="sh_symbol">,</span> cnt<span class="sh_symbol">,</span> srn<span class="sh_symbol">;</span>
<span class="sh_type">int</span> v<span class="sh_symbol">[</span>G<span class="sh_symbol">];</span>

<span class="sh_keyword">inline</span> <span class="sh_type">int</span> <span class="sh_function">ID</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> x <span class="sh_symbol">&lt;=</span> srn <span class="sh_symbol">?</span> x <span class="sh_symbol">:</span> cnt <span class="sh_symbol">+</span> <span class="sh_number">1</span> <span class="sh_symbol">-</span> n <span class="sh_symbol">/</span> x<span class="sh_symbol">;</span><span class="sh_cbracket">}</span>

<span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">;</span>
	srn <span class="sh_symbol">=</span> <span class="sh_function">sqrt</span><span class="sh_symbol">(</span>n<span class="sh_symbol">),</span> cnt <span class="sh_symbol">=</span> srn <span class="sh_symbol">*</span> <span class="sh_number">2</span> <span class="sh_symbol">-</span> <span class="sh_symbol">(</span>srn <span class="sh_symbol">*</span> <span class="sh_symbol">(</span>srn <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">&gt;</span> n<span class="sh_symbol">);</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> srn<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> v<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> i<span class="sh_symbol">,</span> v<span class="sh_symbol">[</span>cnt <span class="sh_symbol">-</span> i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> n <span class="sh_symbol">/</span> i<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// int64 ver.</span>
<span class="sh_usertype">ll</span><span class="sh_normal"> </span>n<span class="sh_symbol">,</span> v<span class="sh_symbol">[</span>G<span class="sh_symbol">];</span>
<span class="sh_type">int</span> cnt<span class="sh_symbol">,</span> srn<span class="sh_symbol">;</span>

<span class="sh_keyword">inline</span> <span class="sh_type">int</span> <span class="sh_function">ID</span><span class="sh_symbol">(</span><span class="sh_usertype">ll</span><span class="sh_normal"> </span>x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> x <span class="sh_symbol">&lt;=</span> srn <span class="sh_symbol">?</span> x <span class="sh_symbol">:</span> cnt <span class="sh_symbol">+</span> <span class="sh_number">1</span> <span class="sh_symbol">-</span> n <span class="sh_symbol">/</span> x<span class="sh_symbol">;</span><span class="sh_cbracket">}</span>

<span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">;</span>
	srn <span class="sh_symbol">=</span> <span class="sh_function">sqrt</span><span class="sh_symbol">(</span>n<span class="sh_symbol">),</span> cnt <span class="sh_symbol">=</span> srn <span class="sh_symbol">*</span> <span class="sh_number">2</span> <span class="sh_symbol">-</span> <span class="sh_symbol">(</span>srn <span class="sh_symbol">*</span> <span class="sh_symbol">(</span>srn <span class="sh_symbol">+</span> <span class="sh_number">1ll</span><span class="sh_symbol">)</span> <span class="sh_symbol">&gt;</span> n<span class="sh_symbol">);</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> i <span class="sh_symbol">&lt;=</span> srn<span class="sh_symbol">;</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> v<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> i<span class="sh_symbol">,</span> v<span class="sh_symbol">[</span>cnt <span class="sh_symbol">-</span> i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> n <span class="sh_symbol">/</span> i<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
