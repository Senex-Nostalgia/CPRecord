<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>树堆 (Treap)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_keyword">struct</span><span class="sh_normal"> </span><span class="sh_classname">random_t</span><span class="sh_cbracket">{</span>
	<span class="sh_usertype">ull</span><span class="sh_normal"> </span>seed<span class="sh_symbol">;</span>
	<span class="sh_keyword">static</span> <span class="sh_keyword">const</span> <span class="sh_usertype">ull</span><span class="sh_normal"> </span>multiplier <span class="sh_symbol">=</span> <span class="sh_number">0x5deece66dll</span><span class="sh_symbol">;</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">static</span> <span class="sh_keyword">const</span> <span class="sh_usertype">ull</span><span class="sh_normal"> </span>addend <span class="sh_symbol">=</span> <span class="sh_number">0xbll</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">static</span> <span class="sh_keyword">const</span> <span class="sh_usertype">ull</span><span class="sh_normal"> </span>mask <span class="sh_symbol">=</span> <span class="sh_number">0xffffffffffffll</span><span class="sh_symbol">;</span>

	<span class="sh_function">random_t</span> <span class="sh_symbol">()</span> <span class="sh_cbracket">{</span><span class="sh_type">char</span> <span class="sh_symbol">*</span>x <span class="sh_symbol">=</span> <span class="sh_keyword">new</span> <span class="sh_type">char</span><span class="sh_symbol">;</span> seed <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>ull<span class="sh_symbol">)</span>x<span class="sh_symbol">;</span> <span class="sh_keyword">delete</span> x<span class="sh_symbol">;</span><span class="sh_cbracket">}</span>

	<span class="sh_type">unsigned</span> <span class="sh_type">int</span> <span class="sh_function">next</span><span class="sh_symbol">()</span><span class="sh_cbracket">{</span>
		seed <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>seed <span class="sh_symbol">*</span> multiplier <span class="sh_symbol">+</span> addend<span class="sh_symbol">)</span> <span class="sh_symbol">&amp;</span> mask<span class="sh_symbol">;</span>
		<span class="sh_keyword">return</span> seed <span class="sh_symbol">&gt;&gt;</span> <span class="sh_number">16</span><span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>

	<span class="sh_type">unsigned</span> <span class="sh_type">int</span> <span class="sh_function">next</span><span class="sh_symbol">(</span><span class="sh_type">unsigned</span> <span class="sh_type">int</span> n<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
		<span class="sh_keyword">return</span> n <span class="sh_symbol">*</span> <span class="sh_symbol">(</span>ull<span class="sh_symbol">)</span><span class="sh_function">next</span><span class="sh_symbol">()</span> <span class="sh_symbol">&gt;&gt;</span> <span class="sh_number">32</span><span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span>rnd<span class="sh_symbol">;</span>

<span class="sh_preproc">#define</span> <span class="sh_usertype">pa</span><span class="sh_normal"> </span>p<span class="sh_symbol">[</span>nd<span class="sh_symbol">]</span>
<span class="sh_preproc">#define</span> <span class="sh_function">C</span><span class="sh_symbol">(</span>x<span class="sh_symbol">)</span> c<span class="sh_symbol">[</span>x<span class="sh_symbol">][</span>nd<span class="sh_symbol">]</span>
<span class="sh_preproc">#define</span> <span class="sh_usertype">root</span><span class="sh_normal"> </span>nd<span class="sh_symbol">[</span><span class="sh_number">0</span><span class="sh_symbol">].</span>c<span class="sh_symbol">[</span><span class="sh_number">0</span><span class="sh_symbol">]</span>

<span class="sh_keyword">struct</span><span class="sh_normal"> </span><span class="sh_classname">node</span> <span class="sh_cbracket">{</span><span class="sh_type">int</span> v<span class="sh_symbol">,</span> sz<span class="sh_symbol">,</span> pt<span class="sh_symbol">;</span> <span class="sh_type">int</span> c<span class="sh_symbol">[</span><span class="sh_number">2</span><span class="sh_symbol">],</span> p<span class="sh_symbol">;</span> <span class="sh_type">unsigned</span> priority<span class="sh_symbol">;</span><span class="sh_cbracket">}</span> nd<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>
<span class="sh_type">int</span> cnt <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>

<span class="sh_keyword">inline</span> <span class="sh_type">int</span> <span class="sh_function">dir</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">return</span> x <span class="sh_symbol">==</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pa<span class="sh_symbol">.</span>c<span class="sh_symbol">[</span><span class="sh_number">1</span><span class="sh_symbol">];</span><span class="sh_cbracket">}</span>

<span class="sh_keyword">inline</span> <span class="sh_type">void</span> <span class="sh_function">update</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>sz <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span><span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">0</span><span class="sh_symbol">).</span>sz <span class="sh_symbol">+</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span><span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">1</span><span class="sh_symbol">).</span>sz <span class="sh_symbol">+</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pt<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">void</span> <span class="sh_function">rotate</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> y <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>p<span class="sh_symbol">,</span> d <span class="sh_symbol">=</span> <span class="sh_symbol">!</span><span class="sh_function">dir</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span>
	nd<span class="sh_symbol">[</span>nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>c<span class="sh_symbol">[!</span>d<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">]].</span>p <span class="sh_symbol">=</span> y<span class="sh_symbol">;</span>
	nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>p <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>p<span class="sh_symbol">;</span>
	nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>pa<span class="sh_symbol">.</span>c<span class="sh_symbol">[</span><span class="sh_function">dir</span><span class="sh_symbol">(</span>y<span class="sh_symbol">)]</span> <span class="sh_symbol">=</span> x<span class="sh_symbol">;</span>
	nd<span class="sh_symbol">[</span>nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> y<span class="sh_symbol">].</span>p <span class="sh_symbol">=</span> x<span class="sh_symbol">;</span>
	<span class="sh_function">update</span><span class="sh_symbol">(</span>y<span class="sh_symbol">);</span> <span class="sh_function">update</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">void</span> <span class="sh_function">push_up</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">for</span><span class="sh_symbol">(;</span> x<span class="sh_symbol">;</span> x <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>p<span class="sh_symbol">)</span> <span class="sh_function">update</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>

<span class="sh_type">void</span> <span class="sh_function">rotation</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_keyword">for</span><span class="sh_symbol">(;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>p <span class="sh_symbol">&amp;&amp;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>priority <span class="sh_symbol">&lt;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pa<span class="sh_symbol">.</span>priority<span class="sh_symbol">;</span> <span class="sh_symbol">)</span> <span class="sh_function">rotate</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span><span class="sh_cbracket">}</span>

<span class="sh_type">void</span> <span class="sh_function">insert</span><span class="sh_symbol">(</span><span class="sh_type">int</span> v<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> x <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> y <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> d <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>root<span class="sh_symbol">)</span> <span class="sh_keyword">for</span><span class="sh_symbol">(</span>y <span class="sh_symbol">=</span> root<span class="sh_symbol">;</span> nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>v <span class="sh_symbol">!=</span> v <span class="sh_symbol">&amp;&amp;</span> nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d <span class="sh_symbol">=</span> v <span class="sh_symbol">&gt;</span> nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>v<span class="sh_symbol">];</span> y <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">]);</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>v <span class="sh_symbol">==</span> v<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_symbol">++</span>nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>pt<span class="sh_symbol">;</span> <span class="sh_function">push_up</span><span class="sh_symbol">(</span>y<span class="sh_symbol">);</span> <span class="sh_keyword">return</span><span class="sh_symbol">;</span><span class="sh_cbracket">}</span>
	nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> x <span class="sh_symbol">=</span> <span class="sh_symbol">++</span>cnt<span class="sh_symbol">;</span>
	nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v <span class="sh_symbol">=</span> v<span class="sh_symbol">;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>sz <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pt <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>p <span class="sh_symbol">=</span> y<span class="sh_symbol">;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span><span class="sh_number">0</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span><span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>priority <span class="sh_symbol">=</span> rnd<span class="sh_symbol">.</span><span class="sh_function">next</span><span class="sh_symbol">();</span> <span class="sh_function">push_up</span><span class="sh_symbol">(</span>y<span class="sh_symbol">);</span>
	<span class="sh_function">rotation</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">void</span> <span class="sh_function">erase</span><span class="sh_symbol">(</span><span class="sh_type">int</span> v<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> x <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> y <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> d <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>root<span class="sh_symbol">)</span> <span class="sh_keyword">for</span><span class="sh_symbol">(</span>x <span class="sh_symbol">=</span> root<span class="sh_symbol">;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v <span class="sh_symbol">!=</span> v <span class="sh_symbol">&amp;&amp;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d <span class="sh_symbol">=</span> v <span class="sh_symbol">&gt;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v<span class="sh_symbol">];</span> x <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">]);</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v <span class="sh_symbol">!=</span> v<span class="sh_symbol">)</span> <span class="sh_keyword">return</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pt <span class="sh_symbol">&gt;</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_cbracket">{</span><span class="sh_symbol">--</span>nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pt<span class="sh_symbol">;</span> <span class="sh_function">push_up</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span> <span class="sh_keyword">return</span><span class="sh_symbol">;</span><span class="sh_cbracket">}</span>
	<span class="sh_keyword">for</span><span class="sh_symbol">(;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span><span class="sh_number">0</span><span class="sh_symbol">]</span> <span class="sh_symbol">&amp;&amp;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span><span class="sh_number">1</span><span class="sh_symbol">];</span> <span class="sh_function">rotate</span><span class="sh_symbol">(</span>nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">]))</span>
		d <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span><span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">0</span><span class="sh_symbol">).</span>priority <span class="sh_symbol">&gt;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span><span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">1</span><span class="sh_symbol">).</span>priority<span class="sh_symbol">;</span>
	d <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span><span class="sh_number">1</span><span class="sh_symbol">]</span> <span class="sh_symbol">&gt;</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> y <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">];</span>
	nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>p <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>p<span class="sh_symbol">;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pa<span class="sh_symbol">.</span>c<span class="sh_symbol">[</span><span class="sh_function">dir</span><span class="sh_symbol">(</span>x<span class="sh_symbol">)]</span> <span class="sh_symbol">=</span> y<span class="sh_symbol">;</span> <span class="sh_function">push_up</span><span class="sh_symbol">(</span>nd<span class="sh_symbol">[</span>y<span class="sh_symbol">].</span>p<span class="sh_symbol">);</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">int</span> <span class="sh_function">rank</span><span class="sh_symbol">(</span><span class="sh_type">int</span> v<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> x <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> d <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> k <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>root<span class="sh_symbol">)</span> <span class="sh_keyword">for</span><span class="sh_symbol">(</span>x <span class="sh_symbol">=</span> root<span class="sh_symbol">;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v <span class="sh_symbol">!=</span> v <span class="sh_symbol">&amp;&amp;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d <span class="sh_symbol">=</span> v <span class="sh_symbol">&gt;</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v<span class="sh_symbol">];</span> x <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">])</span>
		<span class="sh_keyword">if</span><span class="sh_symbol">(</span>d<span class="sh_symbol">)</span> k <span class="sh_symbol">+=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span><span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">0</span><span class="sh_symbol">).</span>sz <span class="sh_symbol">+</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pt<span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v <span class="sh_symbol">!=</span> v<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_symbol">-</span><span class="sh_number">1</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">return</span> k <span class="sh_symbol">+</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span><span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">0</span><span class="sh_symbol">).</span>sz<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">int</span> <span class="sh_function">kth</span><span class="sh_symbol">(</span><span class="sh_type">int</span> k<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> x <span class="sh_symbol">=</span> root<span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>sz <span class="sh_symbol">&lt;</span> k<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> <span class="sh_symbol">-</span><span class="sh_number">1</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span><span class="sh_symbol">(</span><span class="sh_type">int</span> j<span class="sh_symbol">,</span> z<span class="sh_symbol">;</span> <span class="sh_symbol">;</span> <span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
		j <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span><span class="sh_function">C</span><span class="sh_symbol">(</span><span class="sh_number">0</span><span class="sh_symbol">).</span>sz<span class="sh_symbol">;</span> z <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>pt<span class="sh_symbol">;</span>
		<span class="sh_keyword">if</span><span class="sh_symbol">(</span>j <span class="sh_symbol">&lt;=</span> k <span class="sh_symbol">&amp;&amp;</span> k <span class="sh_symbol">&lt;</span> j <span class="sh_symbol">+</span> z<span class="sh_symbol">)</span> <span class="sh_keyword">return</span> x<span class="sh_symbol">;</span>
		x <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>k <span class="sh_symbol">&gt;</span> j<span class="sh_symbol">];</span> k <span class="sh_symbol">&gt;</span> j <span class="sh_symbol">?</span> <span class="sh_symbol">(</span>k <span class="sh_symbol">-=</span> j <span class="sh_symbol">+</span> z<span class="sh_symbol">)</span> <span class="sh_symbol">:</span> k<span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">int</span> <span class="sh_function">prev</span><span class="sh_symbol">(</span><span class="sh_type">int</span> v<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> x <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> r <span class="sh_symbol">=</span> <span class="sh_symbol">-</span><span class="sh_number">1</span><span class="sh_symbol">,</span> d <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>root<span class="sh_symbol">)</span> <span class="sh_keyword">for</span><span class="sh_symbol">(</span>x <span class="sh_symbol">=</span> root<span class="sh_symbol">;</span> x<span class="sh_symbol">;</span> x <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">])</span> <span class="sh_keyword">if</span><span class="sh_symbol">(</span>d <span class="sh_symbol">=</span> v <span class="sh_symbol">&gt;</span> x<span class="sh_symbol">[</span>nd<span class="sh_symbol">].</span>v<span class="sh_symbol">)</span> <span class="sh_function">up</span><span class="sh_symbol">(</span>r<span class="sh_symbol">,</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v<span class="sh_symbol">);</span> <span class="sh_comment">// too little</span>
	<span class="sh_keyword">return</span> r<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">int</span> <span class="sh_function">succ</span><span class="sh_symbol">(</span><span class="sh_type">int</span> v<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> x <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> r <span class="sh_symbol">=</span> INT_MAX<span class="sh_symbol">,</span> d <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">if</span><span class="sh_symbol">(</span>root<span class="sh_symbol">)</span> <span class="sh_keyword">for</span><span class="sh_symbol">(</span>x <span class="sh_symbol">=</span> root<span class="sh_symbol">;</span> x<span class="sh_symbol">;</span> x <span class="sh_symbol">=</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>c<span class="sh_symbol">[</span>d<span class="sh_symbol">])</span> <span class="sh_keyword">if</span><span class="sh_symbol">(!(</span>d <span class="sh_symbol">=</span> v <span class="sh_symbol">&gt;=</span> x<span class="sh_symbol">[</span>nd<span class="sh_symbol">].</span>v<span class="sh_symbol">))</span> <span class="sh_function">down</span><span class="sh_symbol">(</span>r<span class="sh_symbol">,</span> nd<span class="sh_symbol">[</span>x<span class="sh_symbol">].</span>v<span class="sh_symbol">);</span> <span class="sh_comment">// too large</span>
	<span class="sh_keyword">return</span> r<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
