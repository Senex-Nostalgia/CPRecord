<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>树分治 (静态点分治)</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_keyword">namespace</span> Centroid <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> V<span class="sh_symbol">,</span> Gm<span class="sh_symbol">,</span> G<span class="sh_symbol">,</span> size<span class="sh_symbol">[</span>N<span class="sh_symbol">];</span>

	<span class="sh_type">void</span> <span class="sh_function">init</span><span class="sh_symbol">(</span><span class="sh_type">int</span> _V<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>V <span class="sh_symbol">=</span> _V<span class="sh_symbol">,</span> Gm <span class="sh_symbol">=</span> INT_MAX<span class="sh_symbol">;</span><span class="sh_cbracket">}</span>

	<span class="sh_type">int</span> <span class="sh_function">get</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">,</span> <span class="sh_type">int</span> px <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
		<span class="sh_type">int</span> i<span class="sh_symbol">,</span> y<span class="sh_symbol">,</span> M <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">;</span> size<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span>
		<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> first<span class="sh_symbol">[</span>x<span class="sh_symbol">];</span> i<span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> next<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span>
			<span class="sh_keyword">if</span> <span class="sh_symbol">((</span>y <span class="sh_symbol">=</span> to<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span> <span class="sh_symbol">!=</span> px <span class="sh_symbol">&amp;&amp;</span> <span class="sh_symbol">!</span>banned<span class="sh_symbol">[</span>y<span class="sh_symbol">])</span>
				<span class="sh_function">get</span><span class="sh_symbol">(</span>y<span class="sh_symbol">,</span> x<span class="sh_symbol">),</span> <span class="sh_function">up</span><span class="sh_symbol">(</span>M<span class="sh_symbol">,</span> size<span class="sh_symbol">[</span>y<span class="sh_symbol">]),</span> size<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">+=</span> size<span class="sh_symbol">[</span>y<span class="sh_symbol">];</span>
		<span class="sh_keyword">return</span> <span class="sh_function">up</span><span class="sh_symbol">(</span>M<span class="sh_symbol">,</span> V <span class="sh_symbol">-</span> size<span class="sh_symbol">[</span>x<span class="sh_symbol">]),</span> M <span class="sh_symbol">&lt;=</span> Gm <span class="sh_symbol">?</span> <span class="sh_symbol">(</span>Gm <span class="sh_symbol">=</span> M<span class="sh_symbol">,</span> G <span class="sh_symbol">=</span> x<span class="sh_symbol">)</span> <span class="sh_symbol">:</span> G<span class="sh_symbol">;</span>
	<span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span>

<span class="sh_preproc">#define</span> <span class="sh_function">get_centroid</span><span class="sh_symbol">(</span>x<span class="sh_symbol">,</span> y<span class="sh_symbol">)</span> <span class="sh_symbol">(</span>Centroid<span class="sh_symbol">::</span><span class="sh_function">init</span><span class="sh_symbol">(</span>y<span class="sh_symbol">),</span> Centroid<span class="sh_symbol">::</span><span class="sh_function">get</span><span class="sh_symbol">(</span>x<span class="sh_symbol">))</span>

<span class="sh_type">void</span> <span class="sh_function">dfs</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">,</span> <span class="sh_type">int</span> px <span class="sh_symbol">=</span> <span class="sh_number">0</span><span class="sh_symbol">,</span> <span class="sh_type">int</span> dep <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">,</span> y<span class="sh_symbol">;</span> size<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_number">1</span><span class="sh_symbol">;</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> first<span class="sh_symbol">[</span>x<span class="sh_symbol">];</span> i<span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> next<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">((</span>y <span class="sh_symbol">=</span> to<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span> <span class="sh_symbol">!=</span> px <span class="sh_symbol">&amp;&amp;</span> <span class="sh_symbol">!</span>banned<span class="sh_symbol">[</span>y<span class="sh_symbol">])</span>
			<span class="sh_function">dfs</span><span class="sh_symbol">(</span>y<span class="sh_symbol">,</span> x<span class="sh_symbol">,</span> dep <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">),</span> size<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">+=</span> size<span class="sh_symbol">[</span>y<span class="sh_symbol">];</span>
<span class="sh_cbracket">}</span>

<span class="sh_type">void</span> <span class="sh_function">solve</span><span class="sh_symbol">(</span><span class="sh_type">int</span> x<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> i<span class="sh_symbol">,</span> y<span class="sh_symbol">,</span> G<span class="sh_symbol">;</span>
	banned<span class="sh_symbol">[</span>x<span class="sh_symbol">]</span> <span class="sh_symbol">=</span> <span class="sh_keyword">true</span><span class="sh_symbol">,</span> <span class="sh_function">dfs</span><span class="sh_symbol">(</span>x<span class="sh_symbol">);</span>
	<span class="sh_comment">// do something</span>
	<span class="sh_keyword">for</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">=</span> first<span class="sh_symbol">[</span>x<span class="sh_symbol">];</span> i<span class="sh_symbol">;</span> i <span class="sh_symbol">=</span> next<span class="sh_symbol">[</span>i<span class="sh_symbol">])</span>
		<span class="sh_keyword">if</span> <span class="sh_symbol">(!</span>fy<span class="sh_symbol">[</span>y <span class="sh_symbol">=</span> to<span class="sh_symbol">[</span>i<span class="sh_symbol">]])</span>
			G <span class="sh_symbol">=</span> <span class="sh_function">get_centroid</span><span class="sh_symbol">(</span>y<span class="sh_symbol">,</span> size<span class="sh_symbol">[</span>y<span class="sh_symbol">]),</span> <span class="sh_function">solve</span><span class="sh_symbol">(</span>G<span class="sh_symbol">);</span>
<span class="sh_cbracket">}</span>

<span class="sh_comment">// main</span>
G <span class="sh_symbol">=</span> <span class="sh_function">get_centroid</span><span class="sh_symbol">(</span><span class="sh_number">1</span><span class="sh_symbol">,</span> n<span class="sh_symbol">),</span> <span class="sh_function">solve</span><span class="sh_symbol">(</span>G<span class="sh_symbol">);</span></code></pre>
</template>
