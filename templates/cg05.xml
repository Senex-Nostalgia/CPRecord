<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/pgmain.min.css"?>
<?xml-stylesheet type="text/css" href="../additional_files/css/sh_typical.min.css"?>

<template>
<title>旋转卡壳求凸集直径</title>
<pre class="sh_sourceCode"><code class="sh_cpp"><span class="sh_type">double</span> <span class="sh_function">convDiameter</span><span class="sh_symbol">(</span><span class="sh_type">int</span> n<span class="sh_symbol">,</span> <span class="sh_usertype">vec2</span><span class="sh_normal"> </span><span class="sh_symbol">*</span>poly<span class="sh_symbol">)</span> <span class="sh_cbracket">{</span>
	<span class="sh_type">int</span> l <span class="sh_symbol">=</span> std<span class="sh_symbol">::</span><span class="sh_function">min_element</span><span class="sh_symbol">(</span>poly<span class="sh_symbol">,</span> poly <span class="sh_symbol">+</span> n<span class="sh_symbol">)</span> <span class="sh_symbol">-</span> poly<span class="sh_symbol">,</span> r <span class="sh_symbol">=</span> std<span class="sh_symbol">::</span><span class="sh_function">max_element</span><span class="sh_symbol">(</span>poly<span class="sh_symbol">,</span> poly <span class="sh_symbol">+</span> n<span class="sh_symbol">)</span> <span class="sh_symbol">-</span> poly<span class="sh_symbol">,</span> i <span class="sh_symbol">=</span> l<span class="sh_symbol">,</span> j <span class="sh_symbol">=</span> r<span class="sh_symbol">;</span>
	<span class="sh_type">double</span> diam <span class="sh_symbol">=</span> <span class="sh_symbol">(</span>poly<span class="sh_symbol">[</span>l<span class="sh_symbol">]</span> <span class="sh_symbol">-</span> poly<span class="sh_symbol">[</span>r<span class="sh_symbol">]).</span><span class="sh_function">norm2</span><span class="sh_symbol">();</span>
	<span class="sh_keyword">do</span> <span class="sh_cbracket">{</span>
		<span class="sh_symbol">(</span><span class="sh_function">ge</span><span class="sh_symbol">(</span>poly<span class="sh_symbol">[(</span>i <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">%</span> n<span class="sh_symbol">]</span> <span class="sh_symbol">-</span> poly<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">^</span> poly<span class="sh_symbol">[(</span>j <span class="sh_symbol">+</span> <span class="sh_number">1</span><span class="sh_symbol">)</span> <span class="sh_symbol">%</span> n<span class="sh_symbol">]</span> <span class="sh_symbol">-</span> poly<span class="sh_symbol">[</span>j<span class="sh_symbol">],</span> <span class="sh_number">0</span><span class="sh_symbol">)</span> <span class="sh_symbol">?</span> <span class="sh_symbol">++</span>j <span class="sh_symbol">:</span> <span class="sh_symbol">++</span>i<span class="sh_symbol">)</span> <span class="sh_symbol">%=</span> n<span class="sh_symbol">;</span>
		<span class="sh_function">up</span><span class="sh_symbol">(</span>diam<span class="sh_symbol">,</span> <span class="sh_symbol">(</span>poly<span class="sh_symbol">[</span>i<span class="sh_symbol">]</span> <span class="sh_symbol">-</span> poly<span class="sh_symbol">[</span>j<span class="sh_symbol">]).</span><span class="sh_function">norm2</span><span class="sh_symbol">());</span>
	<span class="sh_cbracket">}</span> <span class="sh_keyword">while</span> <span class="sh_symbol">(</span>i <span class="sh_symbol">!=</span> l <span class="sh_symbol">||</span> j <span class="sh_symbol">!=</span> r<span class="sh_symbol">);</span>
	<span class="sh_keyword">return</span> diam<span class="sh_symbol">;</span>
<span class="sh_cbracket">}</span></code></pre>
</template>
